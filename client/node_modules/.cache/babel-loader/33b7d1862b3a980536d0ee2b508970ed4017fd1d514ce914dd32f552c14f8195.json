{"ast":null,"code":"var _jsxFileName = \"/Users/vittoriohalfon/Desktop/Projects/to-do-list-final/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Fetch tasks from the backend when the component mounts\n    fetch('http://localhost:5001/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  const addTask = task => {\n    fetch('http://localhost:5001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => {\n      setTasks([...tasks, newTask]);\n    }).catch(error => console.error('Error adding task:', error));\n  };\n  const completeTask = index => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    // Update task in the backend\n    fetch(`http://localhost:5001/tasks/${newTasks[index].id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTasks[index])\n    }).then(response => response.json()).then(() => {\n      setTasks(newTasks);\n    }).catch(error => console.error('Error updating task:', error));\n  };\n  const deleteTask = index => {\n    const taskToDelete = tasks[index];\n    fetch(`http://localhost:5001/tasks/${taskToDelete.id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      setTasks(tasks.filter((_, i) => i !== index));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onComplete: completeTask,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","newTask","completeTask","index","newTasks","completed","id","deleteTask","taskToDelete","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onComplete","onDelete","_c","$RefreshReg$"],"sources":["/Users/vittoriohalfon/Desktop/Projects/to-do-list-final/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Fetch tasks from the backend when the component mounts\n    fetch('http://localhost:5001/tasks')\n      .then((response) => response.json())\n      .then((data) => setTasks(data))\n      .catch((error) => console.error('Error fetching tasks:', error));\n  }, []);\n\n  const addTask = (task) => {\n    fetch('http://localhost:5001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n    .then((response) => response.json())\n    .then((newTask) => {\n      setTasks([...tasks, newTask]);\n    })\n    .catch((error) => console.error('Error adding task:', error));\n  };\n\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = !newTasks[index].completed;\n    // Update task in the backend\n    fetch(`http://localhost:5001/tasks/${newTasks[index].id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newTasks[index]),\n    })\n    .then((response) => response.json())\n    .then(() => {\n      setTasks(newTasks);\n    })\n    .catch((error) => console.error('Error updating task:', error));\n  };\n\n  const deleteTask = (index) => {\n    const taskToDelete = tasks[index];\n    fetch(`http://localhost:5001/tasks/${taskToDelete.id}`, { method: 'DELETE' })\n      .then((response) => {\n        setTasks(tasks.filter((_, i) => i !== index));\n      })\n      .catch((error) => console.error('Error deleting task:', error));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>To-Do List</h1>\n      <TaskForm onAddTask={addTask} />\n      <TaskList tasks={tasks} onComplete={completeTask} onDelete={deleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}