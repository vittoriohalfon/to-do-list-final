{"ast":null,"code":"var _jsxFileName = \"/Users/vittoriohalfon/Desktop/Projects/to-do-list-final/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(''); // To display error messages\n  const [successMessage, setSuccessMessage] = useState(''); // To display success messages\n\n  useEffect(() => {\n    // Fetch tasks from the backend when the component mounts\n    fetch('http://localhost:5001/tasks').then(response => response.json()).then(data => setTasks(data)).catch(error => console.error('Error fetching tasks:', error));\n  }, []);\n  const addTask = task => {\n    fetch('http://localhost:5001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    }).then(response => response.json()).then(newTask => {\n      setTasks([...tasks, newTask]);\n    }).catch(error => console.error('Error adding task:', error));\n  };\n  const completeTask = index => {\n    const taskToUpdate = tasks[index];\n\n    // Check if dueDate is undefined before sending the request\n    if (!taskToUpdate.dueDate) {\n      setErrorMessage(\"Due date is undefined. Cannot update task.\");\n      return; // Exit the function early\n    }\n    fetch(`http://localhost:5001/tasks/${taskToUpdate.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...taskToUpdate,\n        completed: !taskToUpdate.completed\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(() => {\n      setSuccessMessage('Task updated successfully!');\n      // Additional logic to handle the successful response (e.g., updating state)\n    }).catch(error => {\n      console.error('Error updating task:', error);\n      setErrorMessage(`Error updating task: ${error.message}`);\n    });\n  };\n  const deleteTask = index => {\n    const taskToDelete = tasks[index];\n    fetch(`http://localhost:5001/tasks/${taskToDelete.id}`, {\n      method: 'DELETE'\n    }).then(response => {\n      setTasks(tasks.filter((_, i) => i !== index));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }, this), \"  \", successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message\",\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TaskForm, {\n      onAddTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      onComplete: completeTask,\n      onDelete: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zfb5K4ov0uJIWHYS+lZca2Yu1nI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","errorMessage","setErrorMessage","successMessage","setSuccessMessage","fetch","then","response","json","data","catch","error","console","addTask","task","method","headers","body","JSON","stringify","newTask","completeTask","index","taskToUpdate","dueDate","id","completed","ok","Error","status","message","deleteTask","taskToDelete","filter","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddTask","onComplete","onDelete","_c","$RefreshReg$"],"sources":["/Users/vittoriohalfon/Desktop/Projects/to-do-list-final/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport TaskForm from './components/TaskForm';\nimport TaskList from './components/TaskList';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(''); // To display error messages\n  const [successMessage, setSuccessMessage] = useState(''); // To display success messages\n\n  useEffect(() => {\n    // Fetch tasks from the backend when the component mounts\n    fetch('http://localhost:5001/tasks')\n      .then((response) => response.json())\n      .then((data) => setTasks(data))\n      .catch((error) => console.error('Error fetching tasks:', error));\n  }, []);\n\n  const addTask = (task) => {\n    fetch('http://localhost:5001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(task),\n    })\n    .then((response) => response.json())\n    .then((newTask) => {\n      setTasks([...tasks, newTask]);\n    })\n    .catch((error) => console.error('Error adding task:', error));\n  };\n\n  const completeTask = (index) => {\n    const taskToUpdate = tasks[index];\n  \n    // Check if dueDate is undefined before sending the request\n    if (!taskToUpdate.dueDate) {\n      setErrorMessage(\"Due date is undefined. Cannot update task.\");\n      return;  // Exit the function early\n    }\n  \n    fetch(`http://localhost:5001/tasks/${taskToUpdate.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        ...taskToUpdate,\n        completed: !taskToUpdate.completed ,\n      }),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    })\n    .then(() => {\n      setSuccessMessage('Task updated successfully!');\n      // Additional logic to handle the successful response (e.g., updating state)\n    })\n    .catch((error) => {\n      console.error('Error updating task:', error);\n      setErrorMessage(`Error updating task: ${error.message}`);\n    });\n  };\n  \n\n  const deleteTask = (index) => {\n    const taskToDelete = tasks[index];\n    fetch(`http://localhost:5001/tasks/${taskToDelete.id}`, { method: 'DELETE' })\n      .then((response) => {\n        setTasks(tasks.filter((_, i) => i !== index));\n      })\n      .catch((error) => console.error('Error deleting task:', error));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>To Do List</h1>\n      {errorMessage && <div className=\"error-message\">{errorMessage}</div>}  {/* Display error message */}\n      {successMessage && <div className=\"success-message\">{successMessage}</div>} {/* Display success message */}\n      <TaskForm onAddTask={addTask} />\n      <TaskList tasks={tasks} onComplete={completeTask} onDelete={deleteTask} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}